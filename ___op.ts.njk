import { SetupConfig } from './interfaces/SetupConfig';
import HttpService from './HttpService';
import { HttpMethodEnum } from './enums/HttpMethodEnum'
{% set interfaces = importInterfaces(operations) %}
{% for interface in interfaces -%}
import {{ interface }} from './interfaces/{{ interface }}';
{%- endfor %}

export default class {{ operation_name | capitalize }}Service extends HttpService {
  constructor (setupConfig: SetupConfig) {
    super(setupConfig);
  }

{% for op in operations -%}
  {% for method, path in op.path -%}
    {% if isValidMethod(method)%}
  // {{ path.operationId }}
  public {{ path.operationId }} ({{ pathParamsToDomainParams(path, true) }}): Promise<{{ path['x-response-definitions']['200'] if path['x-response-definitions']['200'] else 'any' }}>{
    return this.sendRequest({
      method: HttpMethodEnum.{{ method | upper}},
      path: '{{op.subresource}}',
      {% for requestType, value in path['x-request-definitions'] -%}
        {% if requestType === 'path' %}params: {{ requestType }},
        {% elif requestType === 'query' %}qs: {{ requestType }},
        {% else %}{{ requestType }},
        {% endif %}
      {%- endfor %}
    })
  }
    {% endif %}
  {%- endfor %}
{%- endfor %}
}
